package ${controller.packageName};

<% for(import in controller.imports!){ %>
import ${import};
<% } %>

/**
 * ${context.bizChName}控制器
 *
 * @author wangwei
 * @Date ${tool.currentTime()}
 */
@Controller
@RequestMapping("/${context.bizEnName}")
public class ${context.bizEnBigName}Controller extends BaseController {

    @Resource
    ${context.bizEnBigName}Dao ${context.bizEnName}Mapper;

    private String PREFIX = "/${context.moduleName}/${context.bizEnName}/";

    /**
     * 跳转到${context.bizChName}首页
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "${context.bizEnName}.html";
    }

    /**
     * 跳转到添加${context.bizChName}
     */
    @RequestMapping("/${context.bizEnName}_add")
    public String ${context.bizEnName}Add() {
        return PREFIX + "${context.bizEnName}_add.html";
    }

    /**
     * 跳转到修改${context.bizChName}
     */
    @Permission
    @RequestMapping("/${context.bizEnName}_update/{${context.bizEnName}Id}")
    public String ${context.bizEnName}Update(@PathVariable Integer ${context.bizEnName}Id, Model model) {
        return PREFIX + "${context.bizEnName}_edit.html";
    }

    /**
     * 获取${context.bizChName}列表
     */
    @ApiOperation("获取${context.bizChName}列表")
    @Permission
    @RequestMapping(value = "/list")
    @ResponseBody
    public Object list(String condition) {
        List<Map<String, Object>> list = ${context.bizEnName}Mapper.list(condition);
        return super.warpObject(new ${context.bizEnBigName}Wrapper(list));
    }

    /**
     * 新增${context.bizChName}
     */
    @ApiOperation("新增${context.bizChName}")
    @Permission
    @RequestMapping(value = "/add")
    @ResponseBody
    @BussinessLog(value = "${context.bizChName}新增")
    public Object add(@Valid ${context.bizEnBigName}Entity ${context.bizEnName}, BindingResult result) {
        if (result.hasErrors()) {
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
        if (ToolUtil.isOneEmpty(....)) {
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
        try {
            ${context.bizEnName}Mapper.insert(${context.bizEnName});
        }catch (DuplicateKeyException de){
            de.printStackTrace();
            throw new BussinessException(BizExceptionEnum.DUPLICATE_KEY);
        }catch (Exception e){
            e.printStackTrace();
            throw new BussinessException(BizExceptionEnum.SYSTEM_ERROR);
        }
        return SUCCESS_TIP;
    }

    /**
     * 删除${context.bizChName}
     */
    @Permission
    @RequestMapping(value = "/delete")
    @ResponseBody
    @BussinessLog(value = "${context.bizChName}删除")
    public Object delete(@RequestParam Integer ${context.bizEnName}Id) {
        if (ToolUtil.isEmpty(${context.bizEnName}Id)) {
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
        try {
            ${context.bizEnName}Mapper.deleteByPrimaryKey(${context.bizEnName}Id);
        }catch (Exception e){
            e.printStackTrace();
            throw new BussinessException(BizExceptionEnum.SYSTEM_ERROR);
        }
        return SUCCESS_TIP;
    }


    /**
     * 修改${context.bizChName}
     */
    @ApiOperation("修改${context.bizChName}")
    @Permission
    @RequestMapping(value = "/update")
    @ResponseBody
    @BussinessLog(value = "${context.bizChName}修改")
    public Object update(@Valid ${context.bizEnBigName}Entity ${context.bizEnName}, BindingResult result) {
        if (result.hasErrors()) {
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
        try {
            ${context.bizEnName}Mapper.updateByPrimaryKeySelective(${context.bizEnName});
        }catch (Exception e){
            e.printStackTrace();
            throw new BussinessException(BizExceptionEnum.SYSTEM_ERROR);
        }
        return SUCCESS_TIP;
    }

    /**
     * ${context.bizChName}详情
     */
    @ApiOperation("${context.bizChName}详情")
    @RequestMapping(value = "/detail")
    @ResponseBody
    public Object detail(@RequestParam Integer ${context.bizEnName}Id) {
        if (ToolUtil.isEmpty(${context.bizEnName}Id)) {
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
        try {
            ${context.bizEnName}Mapper.selectByPrimaryKey(${context.bizEnName}Id);
        }catch (Exception e){
            e.printStackTrace();
            throw new BussinessException(BizExceptionEnum.SYSTEM_ERROR);
        }
        return SUCCESS_TIP;
    }
}
